
.list-picker {        
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.list-picker .selectable-filter input,
.list-picker ul {
    list-style-type: none;
    width: 48%;
    margin:0;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    border: 1px solid transparent;
    padding:1px; /* make space for the fixed height border */
}

.list-picker .selectable-filter input {
    /* colours same as the fixed-height (scrolling) list */
    border-color: #f0f0f0; 
    background-color: #fdfdfd;
    height:2em;
    padding-left:4px;
}


.list-picker li {
    overflow: hidden;
    background-color: white;
    margin-bottom: 3px;
    font-family: Arial,Lucida Grande;
    position: relative;
    border: 1px solid #ccc;
    cursor:default;
}

.list-picker .lit { /* li */
    border:1px solid #9e9e9e;
}

.list-picker .disabled { /* li and .button */
    opacity: 0.7;
    filter: alpha(opacity=70); /* msie */
}

.list-picker .used { /* li */
    background-color:#f6f6fa;
}

.list-picker .markup {
    width:90%;
    padding:4px;
}

.list-picker .button {
    width: 10%;
    height: 100%;
    position: absolute;
    top: 0;
    outline:none;
    background-position:center;
    background-repeat:no-repeat;
    min-width:15px; /* width of icon image */
}

.list-picker .button.disabled {
    cursor:default; /* disable the hand */
}

.list-picker .button:hover,
.list-picker .sort:hover
{
    background-color: #ddd;
}

.list-picker .button.disabled:hover {
    background-color:transparent;
}

.list-picker .placeholders li {
    border:1px dashed #ccc;
    padding:4px;
}

/* 
    <ul class="selectable">
        <li class="(lit) (disabled) (used)">

            <div class="markup">
                {{ custom markup }}
            </div>

            <a class="button (disabled)"></a>

        </li>
    </ul>    
*/

.list-picker .selectable {
    float: left;
}

.list-picker .selectable.fixed-height {
    overflow-y: scroll;
    border-color: #f0f0f0; /* show the border when using scrolling */
    background-color: #fdfdfd;
    direction:rtl; /* force scrollbars left */
}

.list-picker .selectable .markup {
    /* reset the direction:rtl */
    float:left; 
    text-align:left;
}

.list-picker .selectable .button {
    right: 0;
    border-left: 1px solid #ccc;
    background-image: url('/Umbraco/App_Plugins/nuComponents/DataTypes/Shared/ListPicker/ButtonAdd.png');   
}

/*
    <ul class="selected">
        <li class="(lit)">

            <a class="button"></a>

            <div class="markup (sort)">
                {{ custom markup }}
            </div>

        </li>
    </ul>        

    <ul class="placeholders"
        <li/>
        <li class="indicator" />
    </ul>
*/
.list-picker .selected,
.list-picker .placeholders {
    clear: right;
    float: right;
    /* padding-left: TODO: calculate from scrollbar width (want to ensure markup area is same with both sides) */
}

.list-picker .selected .markup {
    margin-left:10%; /* make space for the button */
}

.list-picker .selected .sort {
    cursor: move;
}

.list-picker .selected .button {
    left: 0;
    border-right: 1px solid #ccc;
    background-image: url('/Umbraco/App_Plugins/nuComponents/DataTypes/Shared/ListPicker/ButtonRemove.png');
}

.list-picker .placeholders li {
    text-align: center;
    color: #ccc;
}

.list-picker .placeholders .required { 
    border-style: dotted;
    border-color: #b94a48;
    color: #b94a48;
}

.list-picker .placeholders .select { 
    border-style: dashed;
}

/*.list-picker .placeholders .limit-indicator {
    color:#343434;
    border-color:transparent;
}*/
